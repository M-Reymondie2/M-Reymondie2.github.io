{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"M\u00e9mo","text":""},{"location":"#bases-de-markdown","title":"Bases de Markdown","text":"<p>M\u00e9mo en ligne par  F. Chambon</p> <p>Site de base</p> <p>Mise en valeur d'un mot: en italique, en gras, du <code>code</code> python, soulign\u00e9, surlign\u00e9</p> <p>Touches: </p> <p>Ctrl+Alt+Del+A</p> <p>Mathes: https://ens-fr.gitlab.io/mkdocs/maths/#les-puissances-an</p>"},{"location":"#titre1","title":"Titre1","text":""},{"location":"#titre2","title":"Titre2","text":""},{"location":"#titre3","title":"Titre3","text":""},{"location":"#titre4","title":"Titre4","text":"<p>Parag1</p> <p>Pararg2 =&gt; saut de ligne</p> <p>Saut de ligne ... mais sans interligne =&gt; 2 espaces</p> <p>Ligne horizontale ...</p> <p>... entre 2 parag</p> <p>Liste \u00e0 puces:</p> <ul> <li>blabla</li> <li>blabla =&gt; penser au saut de ligne !</li> </ul> <p>Listes avec num\u00e9rotation:</p> <ol> <li>blabla</li> <li>blabla</li> <li>babla</li> </ol> <p>Les tableaux</p> Col1 Col2 Col3 1 blabla blabla <p>Coloration du code python</p> <pre><code>def salutations():\n    print(\"hello\")\n</code></pre> <p>On peut colorer Python en ligne avec <code>for i in range(10): print(i)</code></p> <p>Langages support\u00e9s: bash, diff et console, markdown, html et css, sql</p>"},{"location":"#markdown-pour-mkdocs","title":"Markdown pour MkDocs","text":"<p>pour une note</p> <p>blabla</p> note enroul\u00e9e <p>Le reste est cach\u00e9e ...</p> <p>Ldr</p> pour un exercice ou une question <p>enroulable, visible par d\u00e9faut</p> <p>pour un exemple</p> <p>Note</p> <pre><code>    &gt;&gt;&gt; console idle\n    r\u00e9sultat\n</code></pre> <pre><code>    &gt;&gt;&gt; console idle\n    r\u00e9sultat\n</code></pre> <p>avec une contrainte ou un danger</p> <p>Pour une difficult\u00e9</p> pour la solution <p>d\u00e9roulable, pas visible par d\u00e9faut</p> <p>Pour un bug</p> <p>pour une info ou une remarque</p> <p>blabla</p> <p>pour une astuce</p> <p>blabla</p> <p>Template avec du code</p> <p>pour une info</p> <p>blabla</p> Question <p>consignes ...</p> <p>Exemple</p> <pre><code>    &gt;&gt;&gt; entr\u00e9e ...\n    sortie ...\n</code></pre> <p>ou:</p> <p>Exemple</p> <p>Entr\u00e9e</p> <p>Sortie</p> Solution <p></p> <p>Si les images dans word sont des copies d'\u00e9cran et qu'il n'est pas possible de les sauver sur le pc, ni de les copier dans paint(perte de qualit\u00e9) =&gt; utiliser l'outil Snipping Tool</p> <p>Lien vers pythontutor avec du code</p> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur <p>IDE vertical  <p>IDE avec 8 tentatives, et fonctions interdites: IDE('nom_fichier', MAX = 8, SANS = 'min, max')</p> <p>Terminal python:</p> Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papier <p>Panneaux coulissants</p> <code>C</code><code>C++</code> <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <p>Ins\u00e9rer des sauts de pages \u00e0 l'impression:</p> <p>Emp\u00e9cher de couper un bloc:</p>  ..."}]}